/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode detectCycle(ListNode head) {
        int a=0;
        ListNode slow=head;
        ListNode fast=head;
        while(fast!=null && fast.next!=null){
            slow=slow.next;
            fast=fast.next.next;
            if(slow==fast){
                a=1;
                break;
            }
        }
        if(a==0)
            return null;
        ListNode temp=head;
             while(temp!=slow)
             {
                 temp=temp.next;
                 slow=slow.next;
             }
             return temp;
    }
}